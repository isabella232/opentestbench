#    Opentestbench : an open-source framework to assess the performances of image compression schemes
#    Copyright (C) 2015  intoPIX s.a. , Sébastien Lugan 
#    Copyright (C) 2015  Universite Catholique de Louvain, Alexandre Willème
#
#    Opentestbench is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#    
#   For any question please contact : 
#   Alexandre Willème (alexandre.willeme@uclouvain.be)


#!/bin/bash
export LANG=C

# either singlegen multigen or errortest
test_type=singlegen

#list of codecs to test
codecs=(vc2hqcbr)

# list of bitrates to test  (in bpp)
bitrates=(15)

#list of pictures folder to use and the related picture format in color_spaces chroma_subs bit_depths image_sizes
#content_dirs=(/export/image_content/ebu/ebuppm/Lupo_candlelight_RGB_8b_one)
content_dirs=(/export/image_content/ebu/ebuyuv/Lupo_candlelight_YCbCr_422_10b_one)
# either RGB or YCbCr
#color_spaces=(RGB)
color_spaces=(YCbCr)
# either 444 or 422
#chroma_subs=(444)
chroma_subs=(422)
# either 8 or 10 bits
#bit_depths=(8)
bit_depths=(10)
# WIDTHxHEIGHT
image_sizes=(3840x2160)
# only used for multigen : number of encoding/decoding cycles to perform
niter=3
# only used for multigen : =1 if the comparison must be made wrt the original picture and =0 if the comparison is made wrt the input of each generation
comparison_with_original=1
# only used for error : number of random bit flip to be tested
nerrors=2


#-----------------------------------------------------------------------------

source benchmark/paths.sh

for ((a=0; a<${#codecs[@]}; ++a)); do
    for ((b=0; b<${#content_dirs[@]}; ++b)); do
        for ((c=0; c<${#bitrates[@]}; ++c)); do
					if [ ${test_type} = "singlegen" ]; then
						bash benchmark/singlegen.sh ${codecs[$a]} ${bitrates[$c]} ${content_dirs[$b]} ${color_spaces[$b]} ${chroma_subs[$b]} ${bit_depths[$b]} ${image_sizes[$b]}
					elif [ ${test_type} = "multigen" ]; then 
						bash benchmark/multigen.sh ${codecs[$a]} ${bitrates[$c]} ${content_dirs[$b]} ${color_spaces[$b]} ${chroma_subs[$b]} ${bit_depths[$b]} ${image_sizes[$b]} ${niter} ${comparison_with_original}
					elif [ ${test_type} = "errortest" ]; then 
						bash benchmark/errortest.sh ${codecs[$a]} ${bitrates[$c]} ${content_dirs[$b]} ${color_spaces[$b]} ${chroma_subs[$b]} ${bit_depths[$b]} ${image_sizes[$b]} ${nerrors}
					else
						echo This test type does not exist
					fi
        done
    done
done 
