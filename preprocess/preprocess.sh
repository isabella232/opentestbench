#    Opentestbench : an open-source framework to assess the performances of image compression schemes
#    Copyright (C) 2015  intoPIX s.a. , Sébastien Lugan 
#    Copyright (C) 2015  Universite Catholique de Louvain, Alexandre Willème
#
#    Opentestbench is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#    
#   For any question please contact : 
#   Alexandre Willème (alexandre.willeme@uclouvain.be)


#!/bin/bash
export LANG=C

source benchmark/paths.sh

function preprocess
{
	test_name=$1
	codec=$2
	bpp=$3
	orig_dir=$4
	decompressed_dir=$5
	color_space=$6
	chroma_sub=$7
	bit_depth=$8
	image_size=$9
	flickering_period=${10}
	decompressed_side=${11}
	xpos_crop=${12}
	output_dir=${13}
  shift 13

	width=${image_size/x*}
	height=${image_size#*x}
	bytespc=1

	half_width=$(bc <<< "${width}/2")
	xlimitleft=${xpos_crop}
	xlimitright=$(bc <<< "${xpos_crop}+${half_width}-1")
	ylimitlow=0
	ylimithigh=$(bc <<< "${height}-1")

  mkdir -p ${output_dir}/${test_name}
	test_dir=${output_dir}/${test_name}

	tmp_dir=$(mktemp -d /tmp/preprocess_XXXXX)
	showdecompressed=0
	i=0
  for f in $(find -L ${decompressed_dir} -type f|grep -v ".txt$"|sort); do
		if [ ${i} = 0 ]; then
			showdecompressed=$(bc <<< "(${showdecompressed}+1)%2")
		fi
		g=${f##*/}
		name=${g}
		extension=${name/*.}
		orig_name=${name/_${codec}_${bpp/./_}bpp}
		${DIFFTESTPATH}/difftest_ng	--crop ${xlimitleft} ${ylimitlow} ${xlimitright} ${ylimithigh} --convert ${tmp_dir}/temphalfdecomp.raw@${half_width}x${height}x3:{8-=0}:{8-=1}:{8-=2} ${decompressed_dir}/${name} -
		${DIFFTESTPATH}/difftest_ng	--crop ${xlimitleft} ${ylimitlow} ${xlimitright} ${ylimithigh} --convert ${tmp_dir}/temphalforig.raw@${half_width}x${height}x3:{8-=0}:{8-=1}:{8-=2} ${orig_dir}/${orig_name} -
		if [ ${showdecompressed} = 1 ]; then
			if [ ${decompressed_side} == "left" ]; then
				${MERGERPATH}/merger ${tmp_dir}/temphalfdecomp.raw ${tmp_dir}/temphalforig.raw ${tmp_dir}/merged.raw ${half_width} ${height} ${bytespc}
				echo DISPLAY LEFT DECOMPRESSED
			else
				${MERGERPATH}/merger ${tmp_dir}/temphalforig.raw ${tmp_dir}/temphalfdecomp.raw ${tmp_dir}/merged.raw ${half_width} ${height} ${bytespc}
				echo DISPLAY RIGHT DECOMPRESSED
			fi
		else
			${MERGERPATH}/merger ${tmp_dir}/temphalforig.raw ${tmp_dir}/temphalforig.raw ${tmp_dir}/merged.raw ${half_width} ${height} ${bytespc}
			echo DISPLAY ORIG ONLY
		fi

		${DIFFTESTPATH}/difftest_ng	--convert ${test_dir}/${name}   ${tmp_dir}/merged.raw@${width}x${height}x3:{8-=0}:{8-=1}:{8-=2} -

		i=$(bc <<< "(${i}+1)%${flickering_period}")
  done
	rm -r ${tmp_dir}/*
	rmdir ${tmp_dir}
}




# usage:
#  preprocess.sh test_type codec bitrate orig_dir decompressed_dir color_space chroma_sub bit_depth image_size flickering_period decompressed_side xpos_crop

test_type=$1
codec=$2
bpp=$3
orig_dir=$4
decompressed_dir=$5
color_space=$6
chroma_sub=$7
bit_depth=$8
image_size=$9
flickering_period=${10}
decompressed_side=${11}
xpos_crop=${12}
shift 12
  
if [ -z ${test_type} ] || [ -z ${codec} ] || [ -z ${bpp} ] || [ -z ${orig_dir} ] || [ -z ${decompressed_dir} ] || [ -z ${color_space} ] || [ -z ${chroma_sub} ] || [ -z ${bit_depth} ] || [ -z ${image_size} ] || [ -z ${flickering_period} ] || [ -z ${decompressed_side} ] || [ -z ${xpos_crop} ]; then
  echo usage preprocess.sh test_type codec bitrate orig_dir decompressed_dir color_space chroma_sub bit_depth image_size flickering_period decompressed_side xpos_crop
  exit 1
fi

mkdir -p results_preprocess/${test_type}/${codec}
output_dir=results_preprocess/${test_type}/${codec}
short_name=${orig_dir##*/}
testname=${short_name}_${codec}_${bpp/./_}bpp_preprocess_fp${flickering_period}_xcrop${xpos_crop}_${decompressed_side}
preprocess ${testname} ${codec} ${bpp} ${orig_dir} ${decompressed_dir} ${color_space} ${chroma_sub} ${bit_depth} ${image_size} ${flickering_period} ${decompressed_side} ${xpos_crop} ${output_dir}
