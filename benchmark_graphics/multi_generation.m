close all

tablePSNR = cell(size(codecs,2),size(picture_set,2),niter);
arrayMean = zeros(size(codecs,2),size(picture_set,2),niter);
arrayMeanSeq = zeros(size(codecs,2),niter);
 for i=1:size(codecs,2)
     for a=1:size(picture_set,2)
          for q=1:niter
               filename = strcat('../results/multi_generation/',codecs{i},'/psnr_',picture_set{a},'_',codecs{i},'_',...
                  int2str(bitrate),'bpp_',color_spaces{a},'_',chroma_subs{a},'_',bit_depths{a},'b_',image_sizes{a},'_r',int2str(q),'.dat');
               if exist(filename, 'file') == 2
                   contentTable = readtable(filename,'ReadVariableNames',false,'Delimiter',' ');
                   PSNR = contentTable{:,2};
                   PSNR(PSNR==Inf) = 125; %125dB corresponds to inf
                   PSNRtab = array2table(PSNR);
                   tablePSNR{i,a,q} = table2cell(PSNRtab);
                   
                   arrayMean(i,a,q) = mean(PSNR);
               else %does not happen in multigen
                    tablePSNR{i,a,q} = {'0'};
                    arrayMean(i,a,q) = 0;
                    disp(strcat(filename,' unavailable'));
               end
          end
     end
     %compute the mean over all the sequences
      for q=1:niter
          arrayMeanSeq(i,q) = mean(squeeze(arrayMean(i,:,q)));
      end
 end
 
 
mkdir('../graphics/multi_generation');
codecs_legend = codecs;
picture_set_titles=strrep(picture_set, '_', '\_');
%codecs_legend = {'JP2K ULL' 'JP2K ULLC'}
charttype = {'-o' '-x' '-*' '-.' '-+' '-^'};
%for value for each image set
  for a=1:size(picture_set,2)
      fig=figure;
      set(fig, 'Position', [800 800 800 600]);
      for i=1:size(codecs,2)
          plotMean = squeeze(arrayMean(i,a,:));
          plotGenerations = 1:niter;
          ix=(plotMean == 0);
          plotMean(ix)=[];    
          plotGenerations(ix)=[];
          hold on
          plot(plotGenerations,plotMean,charttype{i});
      end
      xlabel('Generation #');
      ylabel('PSNR (in dB)'); 
      legend(codecs_legend{:});
      title(strcat('Multi generation results for image set "',picture_set_titles{a},'" at ',int2str(bitrate),' bpp'));
      filename=strcat('../graphics/multi_generation/',picture_set{a},int2str(bitrate),'bpp.jpeg');
        hgexport(gcf, filename, hgexport('factorystyle'), 'Format', 'jpeg');
  end



%for mean on all image sets
fig=figure;
set(fig, 'Position', [800 800 800 600]);
xlabel('Generation #');
ylabel('PSNR (in dB)'); 
for i=1:size(codecs,2)
     plotMean = squeeze(arrayMeanSeq(i,:));
     plotGenerations = 1:niter;
     ix=(plotMean == 0);
     plotMean(ix)=[];    
     plotGenerations(ix)=[];
     hold on
     plot(plotGenerations,plotMean,charttype{i});
end
 legend(codecs_legend{:});
 title(strcat('Mean multi generation results over all sequences at ',int2str(bitrate),' bpp (',image_sizes{a},{' '},color_spaces{a},' ',chroma_subs{a},' ',bit_depths{a},' bits images)'));
 hgexport(gcf, strcat('../graphics/multi_generation/mean_',int2str(bitrate),'bpp',image_sizes{a},color_spaces{a},chroma_subs{a},bit_depths{a},niter,'.jpeg'), hgexport('factorystyle'), 'Format', 'jpeg');
 

