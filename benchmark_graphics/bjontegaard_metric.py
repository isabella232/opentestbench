from __future__ import division
from math import log10
from bjontegaard_metric import *
import csv 
import time
import os 
import os.path
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.colors as colors
from scipy.interpolate import UnivariateSpline


def BD_PSNR(R1, PSNR1, R2, PSNR2):
  lR1 = np.log(R1);
  lR2 = np.log(R2);

  # integration interval
  min_int = max(min(lR1), min(lR2))
  max_int = min(max(lR1), max(lR2))
  xp = np.linspace(lR1[0], lR1[len(R1)-1], 100)

	#for polynomial fit
  #p1 = np.polyfit(lR1, PSNR1, len(R1)-1)
  #p2 = np.polyfit(lR2, PSNR2, len(R2)-1)
  # find integral
  #p_int1 = np.polyint(p1)
  #p_int2 = np.polyint(p2)
  #int1 = np.polyval(p_int1, max_int) - np.polyval(p_int1, min_int)
  #int2 = np.polyval(p_int2, max_int) - np.polyval(p_int2, min_int)
  #p1array = np.poly1d(p1)
  #p2array = np.poly1d(p2)
  #yp1 = p1array(xp)
  #yp2 = p2array(xp)

	#for univariate spline
  s1 = UnivariateSpline(lR1, PSNR1, k=1, s=0)
  s2 = UnivariateSpline(lR2, PSNR2, k=1, s=0)
  int1 = s1.integral(min_int, max_int)
  int2 = s2.integral(min_int, max_int)
  yp1 = s1(xp)
  yp2 = s2(xp)

  # to plot
  #_ = plt.plot(lR1,PSNR1,'.',lR2,PSNR2,'.',xp,yp1,'-',xp,yp2,'--')
  #plt.show()

  # find avg diff
  avg_diff = (int2-int1)/(max_int-min_int)

  return avg_diff

def BD_RATE(R1, PSNR1, R2, PSNR2):
  lR1 = np.log(R1)
  lR2 = np.log(R2)

  # integration interval
  min_int = max(min(PSNR1), min(PSNR2))
  max_int = min(max(PSNR1), max(PSNR2))

	#for polynomial fit
  # rate method
  #p1 = np.polyfit(PSNR1, lR1, len(R1)-1)
  #p2 = np.polyfit(PSNR2, lR2, len(R2)-1)
  # find integral
  #p_int1 = np.polyint(p1)
  #p_int2 = np.polyint(p2)
  #int1 = np.polyval(p_int1, max_int) - np.polyval(p_int1, min_int)
  #int2 = np.polyval(p_int2, max_int) - np.polyval(p_int2, min_int)

	#for univariate spline
  s1 = UnivariateSpline(PSNR1, lR1, k=1, s=0)
  s2 = UnivariateSpline(PSNR2, lR2, k=1, s=0)
  int1 = s1.integral(min_int, max_int)
  int2 = s2.integral(min_int, max_int)

  # find avg diff
  avg_exp_diff = (int2-int1)/(max_int-min_int)
  avg_diff = (np.exp(avg_exp_diff)-1)*100
  return avg_diff




