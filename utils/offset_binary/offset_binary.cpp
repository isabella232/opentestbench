
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>


int main(int argc, char *argv[]){

char *inputfilepath = argv[1];
char *rightShiftFlag = argv[2];
unsigned int bitDepth = (unsigned int) *(argv[3]);

unsigned int shift = 16-bitDepth;

int i;

FILE *inputfile;
inputfile = fopen(inputfilepath, "r+");

if(inputfile == NULL){
printf("error reading %s input file \n", inputfilepath);
fclose(inputfile);
return -1;
}


fseek(inputfile, 0, SEEK_END); // seek to end of file
int filesize = ftell(inputfile); // get current file pointer

//printf("size of the file : %d bytes \n", filesize);

fseek( inputfile, 0, SEEK_SET ); //begining of the file
unsigned short Short;
unsigned char *parts;
parts = (unsigned char *) malloc(sizeof(unsigned char)*filesize);
int j;
fread(parts, sizeof(unsigned char), filesize, inputfile);
fseek( inputfile, 0, SEEK_SET );

unsigned char part1, part2;
if(*rightShiftFlag == '0'){
    for(i=0;i<filesize/2;i++){
    j = 2*i;
    Short = (parts[j] << 8)+parts[j+1];
    //printf("%x : ",Short);
    Short = Short << shift;
    parts[j] = (unsigned char) (Short >> 8);
    parts[j+1] = (unsigned char) (Short);
    //printf(" après : %x : ",Short);
    //printf("\n");
    }
}
else if(*rightShiftFlag == '1'){
    for(i=0;i<filesize/2;i++){
    j = 2*i;
    Short = (parts[j] << 8)+parts[j+1];
    //printf("%x : ",Short);
    Short = Short >> shift;
    parts[j] = (unsigned char) (Short >> 8);
    parts[j+1] = (unsigned char) (Short);
    //printf(" après : %x : ",Short);
    //printf("\n");
    }
}
else {
    printf("rightShiftFlag is not valid");
}

fwrite(parts, sizeof(unsigned char), filesize, inputfile);

fclose(inputfile);
return 0;
}
