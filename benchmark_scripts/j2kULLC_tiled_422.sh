#    Opentestbench : an open-source framework to assess the performances of image compression schemes
#    Copyright (C) 2015  intoPIX s.a. , Sébastien Lugan 
#    Copyright (C) 2015  Universite Catholique de Louvain, Alexandre Willème
#
#    Opentestbench is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#    
#   For any question please contact : 
#   Alexandre Willème (alexandre.willeme@uclouvain.be)
#   Sébastien Lugan (sebastien.lugan@uclouvain.be)

#!/bin/bash
export LANG=C

TMPDIR=$(mktemp -d /tmp/j2ktiler_XXXX)

function xstr
{
  echo $(for ((i=0;i<${1};++i)); do echo -n ${2}; done)
}

function kdu_compress
{
  geom=${1}
  kinput_file_yp=${2}
  kinput_file_cb=${3}
  kinput_file_cr=${4}
  koutput_file=${5}
  rate=${6}
  levels=${7}
  if [ -z ${levels} ]; then
    levels=5
  fi
  Cblk=${8}
  if [ -z ${Cblk} ]; then
    Cblk=32x32
  fi
  Cblk=${Cblk##*x},${Cblk/x*}
  Cprec=$(xstr $((${levels})) "{256,256},")"{128,128}"
  
  width=${geom/x*}
  height=${geom#*x}
  width2=$((${width}/2))
  
  LD_LIBRARY_PATH=${KDUPATH} ${KDUPATH}/kdu_compress \
    -i ${kinput_file_yp},${kinput_file_cb},${kinput_file_cr} -o ${koutput_file} \
    Mprecision=10,10,10 Sprecision=10,10,10 Ssigned=no,no,no \
    Sdims="{${height},${width}},{${height},${width2}},{${height},${width2}}" \
    Scomponents=3 Stiles="{2,8192}" ORGgen_tlm=3 ORGtparts=C Corder="{CPRL}" Clevels=${levels} \
    Cprecincts="${Cprec}" Cblk="{${Cblk}}" Creversible=no Cycc=no Cmodes="{RESET|RESTART|CAUSAL}" -precise Qstep=.0001 \
    -rate ${rate} -no_weights -num_threads 0
}

function kdu_expand
{
  LD_LIBRARY_PATH=${KDUPATH} ${KDUPATH}/kdu_expand \
    -i ${1} -o ${2},${2/_y./_cb.},${2/_y./_cr.} -precise
}

function tiled_compress
{
  if [ ${1} = "-b" ]; then
    rate=${2}
    shift 2
  else
    rate=2
  fi
  input_file=${1}
  output_file=${2}
  sn=${input_file##*/}  # Short name
  bn=${sn/.*}           # Base name

  # Tile geometry
  res_full=3840x2160
  res_half=1920x2160
  res_yp=3840x8
  res_cb=1920x8
  res_cr=1920x8
  tile=1x270

  # J2K parameters
  cblk=1024x4
  levels=6

  # Step 1: split the image

  if [ ! -d ${TMPDIR}/t_${res_yp} ]; then
    mkdir ${TMPDIR}/t_${res_yp}
  fi
  ${V210TOOLSPATH}/v210_split ${input_file} ${TMPDIR}/t_${res_yp}/component_%s.raw
  input_cmp=(${TMPDIR}/t_${res_yp}/component_{y,cb,cr}.raw)
  ${IMPATH}/convert -size ${res_full} g:${input_cmp[0]} -crop ${res_yp} \
          -endian msb g:${TMPDIR}/t_${res_yp}/${bn}_y_%03d.raw
  ${IMPATH}/convert -size ${res_half} g:${input_cmp[1]} -crop ${res_cb} \
          -endian msb g:${TMPDIR}/t_${res_yp}/${bn}_cb_%03d.raw
  ${IMPATH}/convert -size ${res_half} g:${input_cmp[2]} -crop ${res_cr} \
          -endian msb g:${TMPDIR}/t_${res_yp}/${bn}_cr_%03d.raw

  # Step 2: compress the individual tiles

  dirname=${TMPDIR}/r_${rate}_${cblk}_${res_yp}
  if [ ! -d ${dirname} ]; then mkdir ${dirname}; fi
  for f in "${TMPDIR}/t_${res_yp}/${bn}_y"_*.raw; do
    out=${dirname}/kdu_${f##*/}
    out=${out/_y_/_}
    out=${out/.raw}.j2k
    kdu_compress ${res_yp} ${f} ${f/_y_/_cb_} ${f/_y_/_cr_} ${out} ${rate} ${levels} ${cblk} 2>&1 > /dev/null
  done

  # Step 3: uncompress the individual tiles

  for f in "${dirname}/kdu_${bn}"_*.j2k; do
    kdu_expand "${f}" "${f/.j2k}_y.raw" 2>&1 > /dev/null
  done

  # Step 4: recombine the individual tiles

  ${IMPATH}/montage -tile ${tile} -geometry ${res_yp} -size ${res_yp} -endian msb \
    g:${dirname}/kdu_${bn}_???_y.raw  -depth 16 -endian lsb g:${dirname}/kdu_${bn}_y.raw
  ${IMPATH}/montage -tile ${tile} -geometry ${res_cb} -size ${res_cb} -endian msb \
    g:${dirname}/kdu_${bn}_???_cb.raw -depth 16 -endian lsb g:${dirname}/kdu_${bn}_cb.raw
  ${IMPATH}/montage -tile ${tile} -geometry ${res_cr} -size ${res_cr} -endian msb \
    g:${dirname}/kdu_${bn}_???_cr.raw -depth 16 -endian lsb g:${dirname}/kdu_${bn}_cr.raw
  ${V210TOOLSPATH}/v210_merge ${dirname}/kdu_${bn}_%s.raw ${output_file}
}

tiled_compress $*
rm -rf ${TMPDIR}
