#    Opentestbench : an open-source framework to assess the performances of image compression schemes
#    Copyright (C) 2015  intoPIX s.a. , Sébastien Lugan 
#    Copyright (C) 2015  Universite Catholique de Louvain, Alexandre Willème
#
#    Opentestbench is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#    
#   For any question please contact : 
#   Alexandre Willème (alexandre.willeme@uclouvain.be)


#!/bin/bash
export LANG=C

source benchmark/paths.sh


function gen
{
	test_name=$1
	codec=$2
	bpp=$3
	src_dir=$4
	src_dir_sb_factor=$5
	compa_dir=$6
	color_space=$7
	chroma_sub=$8
	bit_depth=$9
	image_size=${10}
	output_dir=${11}
  shift 11

  mkdir -p ${output_dir}/${test_name}
	test_dir=${output_dir}/${test_name}

	if [[ ("${color_space}" == "RGB") && ("${chroma_sub}" == "444") && (("${bit_depth}" == "8") || ("${bit_depth}" == "10") || ("${bit_depth}" == "12")) ]]; then
		extension=ppm
	elif [[ ("${color_space}" == "YCbCr") && ("${chroma_sub}" == "422") && ("${bit_depth}" == "10") ]]; then
		extension=yuv
		suffixdifftest=@${image_size}x3:[6-],[10-=0]:[6-]/2x1,[10-=1]/2x1:[6-]/2x1,[10-=2]/2x1
	elif [[ ("${color_space}" == "YCbCr") && ("${chroma_sub}" == "422") && ("${bit_depth}" == "12") ]]; then
		extension=yuv
		suffixdifftest=@${image_size}x3:[4-],[12-=0]:[4-]/2x1,[12-=1]/2x1:[4-]/2x1,[12-=2]/2x1
	fi

  bash benchmark/${codec}/${codec}.sh ${bpp} ${src_dir} ${src_dir_sb_factor} ${color_space} ${chroma_sub} ${bit_depth} ${image_size} ${test_dir}
	i=0
	countSc=0
	echo -n "" >  ${output_dir}/psnr_${test_name}.dat
  for f in $(find -L ${src_dir} -type f|grep -v ".txt$"|sort); do
		if [ ${i} = 0 ]; then
		  g=${f##*/}
		  name=${g/.*}
			test_file=$(find -L ${test_dir} -type f -name ${name}_sc*.${extension})
			test_file_final_name=${test_dir}/${name}.${extension}
			compa_file=${compa_dir}/${name}.${extension}
		  if [ ! -f ${test_file} ]; then
		    echo ${name}.${extension} NaN >> ${output_dir}/psnr_${test_name}.dat
		  else
				temp=${test_file/.*}
				temp2=${temp##*_sc}
				realSize=${temp2/x*}
				targetSize=${temp2#*x}
				sizeExceeded=$(bc <<< "${realSize} > ${targetSize}")
		    result=$(${DIFFTESTPATH}/difftest_ng --asprec ${bit_depth} --psnr ${test_file}${suffixdifftest} ${compa_file}${suffixdifftest})
				echo result ${result}
		    psnr=${result##*:}
				if [ ${sizeExceeded} = 1 ]; then
		    	echo ${name}.${extension} ${psnr} ${realSize} ${targetSize} !!! >> ${output_dir}/psnr_${test_name}.dat
					countSc=$(bc <<< "${countSc}+1")
				else
					echo ${name}.${extension} ${psnr} ${realSize} ${targetSize} >> ${output_dir}/psnr_${test_name}.dat
				fi
		  fi
			mv ${test_file} test_file_final_name
	#    to remove the picture in the output folder
	#    rm ${test_file_final_name}
		fi
		i=$(bc <<< "(${i}+1)%${src_dir_sb_factor}")
  done
	echo NumberSizeExceeded ${countSc} >> ${output_dir}/psnr_${test_name}.dat
}






# usage:
#   gen.sh test_name codec bpp src_dir src_dir_sb_factor compa_dir color_space chroma_sub bit_depth image_size output_dir

test_name=$1
codec=$2
bpp=$3
src_dir=$4
src_dir_sb_factor=$5
compa_dir=$6
color_space=$7
chroma_sub=$8
bit_depth=$9
image_size=${10}
output_dir=${11}
shift 11

  
if [ -z ${test_name} ] || [ -z ${codec} ] || [ -z ${bpp} ] || [ -z ${src_dir} ] || [ -z ${src_dir_sb_factor} ] || [ -z ${compa_dir} ] || [ -z ${color_space} ] || [ -z ${chroma_sub} ] || [ -z ${bit_depth} ] || [ -z ${image_size} ] || [ -z ${output_dir} ]; then
  echo "Usage: gen.sh test_name codec bpp src_dir src_dir_sb_factor compa_dir color_space chroma_sub bit_depth image_size output_dir"
  exit 1
fi

gen ${test_name} ${codec} ${bpp} ${src_dir} ${src_dir_sb_factor} ${compa_dir} ${color_space} ${chroma_sub} ${bit_depth} ${image_size} ${output_dir}
