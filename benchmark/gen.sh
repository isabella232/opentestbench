#    Opentestbench : an open-source framework to assess the performances of image compression schemes
#    Copyright (C) 2015  intoPIX s.a. , Sébastien Lugan 
#    Copyright (C) 2015  Universite Catholique de Louvain, Alexandre Willème
#
#    Opentestbench is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#    
#   For any question please contact : 
#   Alexandre Willème (alexandre.willeme@uclouvain.be)


#!/bin/bash
export LANG=C

source benchmark/paths.sh

function gen
{
	test_name=$1
	codec=$2
	bpp=$3
	src_dir=$4
	compa_dir=$5
	output_dir=$6

	test_dir=${output_dir}/${test_name}
  	mkdir -p ${test_dir}	

	countSc=0
	echo -n "" >  ${output_dir}/psnr_${test_name}.dat
  	for f in $(find -L ${src_dir} -type f|grep -v ".txt$"|sort); do
		
		#use image magick to read the file
		identifyString=$(identify ${f})
		arr=($identifyString)

		image_size=${arr[2]}
		bit_depth=${arr[4]/-*}

	  	bash benchmark/${codec}/${codec}.sh ${bpp} ${f} ${bit_depth} ${image_size} ${test_dir}

		extension=${f##*.}
		g=${f##*/}
		name=${g/.*}
		name=${name/_${codec}_${bpp/./_}bpp}
		test_file=$(find -L ${test_dir} -type f -name ${name}_${codec}_${bpp/./_}bpp_sc*.${extension})
		test_file_final_name=${test_dir}/${name}_${codec}_${bpp/./_}bpp.${extension}
		compa_file=${compa_dir}/${name}.${extension}	
		#in the case of "Already there" (the info on the sizes is not available anymore)
		if [ -f ${test_file_final_name} ]; then
			echo ${DIFFTESTPATH}/difftest_ng --asprec ${bit_depth} --psnr ${test_file_final_name} ${compa_file}
			result=$(${DIFFTESTPATH}/difftest_ng --asprec ${bit_depth} --psnr ${test_file_final_name} ${compa_file})
			psnr=${result##*:}
			echo ${name}.${extension} ${psnr} >> ${output_dir}/psnr_${test_name}.dat
		elif [ ${test_file} != "" ]; then
			temp=${test_file/.*}
			temp2=${temp##*_sc}
			realSize=${temp2/x*}
			targetSize=${temp2#*x}
			sizeExceeded=$(bc <<< "${realSize} > ${targetSize}")
			result=$(${DIFFTESTPATH}/difftest_ng --asprec ${bit_depth} --psnr ${test_file} ${compa_file})
			echo result $result
			psnr=${result##*:}
			if [ ${sizeExceeded} = 1 ]; then
				echo ${name}.${extension} ${psnr} ${realSize} ${targetSize} !!! >> ${output_dir}/psnr_${test_name}.dat
				countSc=$(bc <<< "${countSc}+1")
			else
				echo ${name}.${extension} ${psnr} ${realSize} ${targetSize} >> ${output_dir}/psnr_${test_name}.dat
			fi
			mv ${test_file} ${test_file_final_name}
		else #if the file is not there
			echo ${name}.${extension} NaN NaN NaN NaN >> ${output_dir}/psnr_${test_name}.dat
		fi
  	done
	echo NumberSizeExceeded ${countSc} >> ${output_dir}/psnr_${test_name}.dat
}






# usage:
#   gen.sh test_name codec bpp src_dir src_dir_sb_factor compa_dir color_space chroma_sub bit_depth image_size output_dir

test_name=$1
codec=$2
bpp=$3
src_dir=$4
compa_dir=$5
output_dir=${6}

  
if [ -z ${test_name} ] || [ -z ${codec} ] || [ -z ${bpp} ] || [ -z ${src_dir} ] || [ -z ${compa_dir} ] || [ -z ${output_dir} ]; then
  echo "Usage: gen.sh test_name codec bpp src_dir compa_dir output_dir"
  exit 1
fi

gen ${test_name} ${codec} ${bpp} ${src_dir} ${compa_dir} ${output_dir}
