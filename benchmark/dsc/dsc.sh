#    Opentestbench : an open-source framework to assess the performances of image compression schemes
#    Copyright (C) 2015  intoPIX s.a. , Sébastien Lugan 
#    Copyright (C) 2015  Universite Catholique de Louvain, Alexandre Willème
#
#    Opentestbench is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#    
#   For any question please contact : 
#   Alexandre Willème (alexandre.willeme@uclouvain.be)

#!/bin/bash
export LANG=C

source benchmark/paths.sh



function dsc_RGB_444_8b
{
  bpp=$1
  src_dir=$2
	image_size=$3
	test_dir=${4}
	errorPos=$5
	numBits=$6
	extension=${7}
	errorsuffix=${8}
	shift 9
	if [ ${errorPos} = 0 ] && [ ${numBits} = 0 ]; then
			errorTest=0
	else
			errorTest=1
	fi
  tmp_dir=$(mktemp -d /tmp/broadcom_XXXXX)
  tmp_cfg=${tmp_dir}/config.cfg
  tmp_cfgenc=${tmp_dir}/configenc.cfg
  tmp_cfgdec=${tmp_dir}/configdec.cfg
  tmp_lst=test_list.txt
	mkdir ${tmp_dir}/input
	ln -s ${PWD}/${DSCPATH}/*.cfg ${tmp_dir}  
	# TO CHANGE RATE and switch from 10bpc to 8bpc
	sed 's/10bpc_12bpp/8bpc_'${bpp}'bpp/' ${tmp_dir}/configRGB.cfg > ${tmp_cfg}  
 	sed 's/10bpc_12bpp/8bpc_'${bpp}'bpp/' ${tmp_dir}/configRGBenc.cfg > ${tmp_cfgenc}
 	sed 's/10bpc_12bpp/8bpc_'${bpp}'bpp/' ${tmp_dir}/configRGBdec.cfg > ${tmp_cfgdec}
  for f in $(find -L ${src_dir} -type f|grep -v ".txt$"|sort); do
    g=${f##*/}
    name=${g/.*}
    echo ${name}.${extension}
		test_file=${test_dir}/${name}${errorsuffix}.${extension}
    if [ -f ${test_file} ]; then
      	echo "Already there!"
    else
       ${DIFFTESTPATH}/difftest_ng --convert ${tmp_dir}/input/${name}.dpx ${f} -
    fi
  done
	DSCABSPATH=${PWD}/${DSCPATH}
	EIABSPATH=${PWD}/${EIPATH}
  pushd "${tmp_dir}"
  find input -type f > ${tmp_lst}
	if [ ${errorTest} = 1 ]; then
		${DSCABSPATH}/dsc -F configenc.cfg ${tmp_lst} 
    for q in $(find -L input -type f|grep -v ".txt$"|sort); do
        j=${q##*/}
        j=${j/.dpx}
				${EIABSPATH}/error_insertion1b ${j}.dsc ${errorPos} ${numBits}
    done 
    wait
    ${DSCABSPATH}/dsc -F configdec.cfg ${tmp_lst} 
	else	
		${DSCABSPATH}/dsc -F config.cfg ${tmp_lst}
	fi
	popd
  for f in $(find ${tmp_dir} -name '*.out.dpx' -type f); do
    g=${f##*/}
    name=${g/.*}
		test_file=${test_dir}/${name}${errorsuffix}.${extension}
     #this conversion would not work if we use gm (PSNR would be low)
     ${DIFFTESTPATH}/difftest_ng --convert ${test_file} ${f} -
  done
  rm -rf ${tmp_dir}
}



function dsc_YCbCr_422_10b
{
  bpp=$1
  src_dir=$2
	image_size=$3
	test_dir=${4}
	errorPos=$5
	numBits=$6
	extension=${7}
	errorsuffix=${8}
	shift 9
	if [ ${errorPos} = 0 ] && [ ${numBits} = 0 ]; then
			errorTest=0
	else
			errorTest=1
	fi
  tmp_dir=$(mktemp -d /tmp/broadcom_XXXXX)
  tmp_cfg=${tmp_dir}/config.cfg
  tmp_cfgenc=${tmp_dir}/configenc.cfg
  tmp_cfgdec=${tmp_dir}/configdec.cfg
  tmp_lst=test_list.txt
	mkdir ${tmp_dir}/input
	ln -s ${PWD}/${DSCPATH}/*.cfg ${tmp_dir}  
	# TO CHANGE RATE and switch from 10bpc to 8bpc
	sed 's/10bpc_12bpp/10bpc_'${bpp}'bpp/' ${tmp_dir}/configYCbCr422.cfg > ${tmp_cfg}  
 	sed 's/10bpc_12bpp/10bpc_'${bpp}'bpp/' ${tmp_dir}/configYCbCr422enc.cfg > ${tmp_cfgenc}
 	sed 's/10bpc_12bpp/10bpc_'${bpp}'bpp/' ${tmp_dir}/configYCbCr422dec.cfg > ${tmp_cfgdec}
  for f in $(find -L ${src_dir} -type f|grep -v ".txt$"|sort); do
    g=${f##*/}
    name=${g/.*}
    echo ${name}.${extension}
		test_file=${test_dir}/${name}${errorsuffix}.${extension}
    if [ -f ${test_file} ]; then
      	echo "Already there!"
    else
       ${DIFFTESTPATH}/difftest_ng --pad 10 ${tmp_dir}/input/${name}.dpx ${f}@${image_size}x3:[16-=0]:[16-=1]/2x1:[16-=2]/2x1 -
    fi
  done
	DSCABSPATH=${PWD}/${DSCPATH}
	EIABSPATH=${PWD}/${EIPATH}
  pushd "${tmp_dir}"
  find input -type f > ${tmp_lst}
	if [ ${errorTest} = 1 ]; then
		${DSCABSPATH}/dsc -F configenc.cfg ${tmp_lst} 
    for q in $(find -L input -type f|grep -v ".txt$"|sort); do
        j=${q##*/}
        j=${j/.dpx}
				${EIABSPATH}/error_insertion1b ${j}.dsc ${errorPos} ${numBits}
    done 
    wait
    ${DSCABSPATH}/dsc -F configdec.cfg ${tmp_lst} 
	else	
		${DSCABSPATH}/dsc -F config.cfg ${tmp_lst}
	fi
	popd
  for f in $(find ${tmp_dir} -name '*.out.dpx' -type f); do
    g=${f##*/}
    name=${g/.*}
		test_file=${test_dir}/${name}${errorsuffix}.${extension}
     #this conversion would not work if we use gm (PSNR would be low)
     ${DIFFTESTPATH}/difftest_ng --pad 10 ${test_file}@${image_size}x3:[16-=0]:[16-=1]/2x1:[16-=2]/2x1 ${f} -
  done
  rm -rf ${tmp_dir}
}


function dsc
{
  bpp=$1
  src_dir=$2
  color_space=$3
	chroma_sub=$4
	bit_depth=$5
	image_size=$6
	test_dir=${7}
	errorPos=$8
	numBits=$9
	if [[ ("${color_space}" == "RGB") && ("${chroma_sub}" == "444") && (("${bit_depth}" == "8") || ("${bit_depth}" == "10")) ]]; then
		extension=ppm
	elif [ ${color_space} = "YCbCr" ] && [ ${chroma_sub} = "422" ] && [ ${bit_depth} = 10 ]; then
		extension=raw
	fi
	if [ ${errorPos} = 0 ] && [ ${numBits} = 0 ]; then
			errorsuffix=
	else
			errorsuffix=_${errorPos}
	fi

	if [ ${color_space} = "RGB" ] && [ ${chroma_sub} = "444" ] && [ ${bit_depth} = 8 ]; then
		dsc_RGB_444_8b ${bpp} ${src_dir} ${image_size} ${test_dir} ${errorPos} ${numBits} ${extension} ${errorsuffix}
	elif [ ${color_space} = "RGB" ] && [ ${chroma_sub} = "444" ] && [ ${bit_depth} = 10 ]; then
		echo No supported yet
	elif [ ${color_space} = "YCbCr" ] && [ ${chroma_sub} = "422" ] && [ ${bit_depth} = 10 ]; then
		dsc_YCbCr_422_10b ${bpp} ${src_dir} ${image_size} ${test_dir} ${errorPos} ${numBits} ${extension} ${errorsuffix}
	else
		echo This config is not available for DSC
	fi
}


# usage:
#   dsc.sh bpp src_dir color_space chroma_sub bit_depth image_size test_dir (errorPos) (numBits)

bpp=$1
src_dir=$2
color_space=$3
chroma_sub=$4
bit_depth=$5
image_size=$6
test_dir=${7}
errorPos=$8
numBits=$9
shift 9

if [ -z ${bpp} ] || [ -z ${src_dir} ] || [ -z ${color_space} ] || [ -z ${chroma_sub} ] || [ -z ${bit_depth} ] || [ -z ${image_size} ] || [ -z ${test_dir} ]; then
  echo "Usage: vc2hqcbr.sh bpp src_dir color_space chroma_sub bit_depth image_size test_dir (errorPos) (numBits)"
  exit 1
fi

if [ -z ${errorPos} ] && [ -z ${numBits} ]; then
	errorPos=0
	numBits=0
fi

dsc ${bpp} ${src_dir} ${color_space} ${chroma_sub} ${bit_depth} ${image_size} ${test_dir} ${errorPos} ${numBits}
