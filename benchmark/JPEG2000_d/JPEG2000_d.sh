#    Opentestbench : an open-source framework to assess the performances of image compression schemes
#    Copyright (C) 2015  intoPIX s.a. , Sébastien Lugan 
#    Copyright (C) 2015  Universite Catholique de Louvain, Alexandre Willème
#
#    Opentestbench is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#    
#   For any question please contact : 
#   Alexandre Willème (alexandre.willeme@uclouvain.be)

#!/bin/bash
export LANG=C

source benchmark/paths.sh

function JPEG2000_d_Bayer
{
	bpp=$1
	src_file=$2
	bitdepth=$3
	image_size=$4
	test_file=$5

	extension=${test_file##*.}

	width=${image_size/x*}
	height=${image_size#*x}

	tmp_dir=$(mktemp -d /tmp/kdu_XXXXX)
	rate=$(bc <<< "4*${bpp}")

	${DIFFTESTPATH}/difftest_ng --frombayer --only 0 --convert ${tmp_dir}/in0.pgm ${src_file} -
	${DIFFTESTPATH}/difftest_ng --frombayer --only 1 --convert ${tmp_dir}/in1.pgm ${src_file} -
	${DIFFTESTPATH}/difftest_ng --frombayer --only 2 --convert ${tmp_dir}/in2.pgm ${src_file} -
	${DIFFTESTPATH}/difftest_ng --frombayer --only 3 --convert ${tmp_dir}/in3.pgm ${src_file} -
	#CONFIG 3
	param=$(bc <<< "2^(${bitdepth}-1)")
	LD_LIBRARY_PATH=${KDUPATH} ${KDUPATH}/kdu_compress -i ${tmp_dir}/in1.pgm,${tmp_dir}/in2.pgm,${tmp_dir}/in0.pgm,${tmp_dir}/in3.pgm -o ${tmp_dir}/cfa.j2c Catk=2 Kkernels:I2=I5X3 -precise Qstep=0.0001 -tolerance 0 -no_weights -rate ${rate} -num_threads 0  Mcomponents=4 Sprecision=${bitdepth} Ssigned=no,yes,no,no Mmatrix_size:I5=4 Mmatrix_coeffs:I5=1.0,-1.0,1.0,1.0 Mvector_size:I6=2 Mvector_coeffs:I6=${param} Mstage_inputs:I7=\{0,1\},\{2,3\} Mstage_outputs:I7=\{0,3\} Mstage_collections:I7=\{2,2\},\{2,2\} Mstage_xforms:I7=\{MATRIX,5,6,0,0\},\{MATRIX,0,6,0,0\} Mnum_stages=1 Mstages=7
	

	LD_LIBRARY_PATH=${KDUPATH} ${KDUPATH}/kdu_expand -i ${tmp_dir}/cfa.j2c -o ${tmp_dir}/out1.pgm,${tmp_dir}/out2.pgm,${tmp_dir}/out0.pgm,${tmp_dir}/out3.pgm -precise -num_threads 0
	${DIFFTESTPATH}/difftest_ng --convert ${tmp_dir}/out0.pgx ${tmp_dir}/out0.pgm -
	${DIFFTESTPATH}/difftest_ng --convert ${tmp_dir}/out1.pgx ${tmp_dir}/out1.pgm -
	${DIFFTESTPATH}/difftest_ng --convert ${tmp_dir}/out2.pgx ${tmp_dir}/out2.pgm -
	${DIFFTESTPATH}/difftest_ng --convert ${tmp_dir}/out3.pgx ${tmp_dir}/out3.pgm -
	cat ${tmp_dir}/out0.pgx ${tmp_dir}/out1.pgx ${tmp_dir}/out2.pgx ${tmp_dir}/out3.pgx > ${tmp_dir}/out.pgx
	${DIFFTESTPATH}/difftest_ng --tobayer --convert ${test_file} ${tmp_dir}/out.pgx -

	targetSize=$(bc <<< "${bpp}*${width}*${height}/8")
	realSize=$(wc -c <"${tmp_dir}/cfa.j2c")

	mv ${test_file} ${test_file/.*}_sc${realSize}x${targetSize}.${extension}
	rm -r ${tmp_dir}/*
	rmdir ${tmp_dir}
}

function JPEG2000_d
{
  	bpp=$1
  	src_pic=$2
	bit_depth=$3
	image_size=$4
	test_dir=$5
	shift 5

	extension=${src_pic##*.}
	g=${src_pic##*/}
	name=${g/.*}

	echo ${name}.${extension}
	test_file=${test_dir}/${name/_JPEG2000_d_${bpp/./_}bpp}_JPEG2000_d_${bpp/./_}bpp.${extension}
	if [ -f ${test_file} ]; then
	  	echo "Already there!"
	else
		if [ ${bit_depth} = 8 ]; then
			JPEG2000_d_Bayer ${bpp} ${src_pic} ${bit_depth} ${image_size} ${test_file}
		elif [ ${bit_depth} = 10 ]; then
			JPEG2000_d_Bayer ${bpp} ${src_pic} ${bit_depth} ${image_size} ${test_file}
		elif [ ${bit_depth} = 12 ]; then
			JPEG2000_d_Bayer ${bpp} ${src_pic} ${bit_depth} ${image_size} ${test_file}
		elif [ ${bit_depth} = 14 ]; then
			JPEG2000_d_Bayer ${bpp} ${src_pic} ${bit_depth} ${image_size} ${test_file}
		else
			echo This config is not available with JPEG2000_d
		fi
	fi
}


# usage:
#   JPEG2000_d.sh bpp src_pic bit_depth image_size test_dir

bpp=$1
src_pic=$2
bit_depth=$3
image_size=$4
test_dir=$5

if [ -z ${bpp} ] || [ -z ${src_pic} ] || [ -z ${bit_depth} ] || [ -z ${image_size} ] || [ -z ${test_dir} ]; then
  echo "Usage: JPEG2000_d.sh bpp src_pic bit_depth image_size test_dir"
  exit 1
fi

JPEG2000_d ${bpp} ${src_pic} ${bit_depth} ${image_size} ${test_dir}
