#    Opentestbench : an open-source framework to assess the performances of image compression schemes
#    Copyright (C) 2015  intoPIX s.a. , Sébastien Lugan 
#    Copyright (C) 2015  Universite Catholique de Louvain, Alexandre Willème
#
#    Opentestbench is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#    
#   For any question please contact : 
#   Alexandre Willème (alexandre.willeme@uclouvain.be)


#!/bin/bash
export LANG=C

source benchmark/paths.sh

function gen_overlay
{
	test_name=$1
	codec=$2
	bpp=$3
	src_dir=$4
	src_dir_sb_factor=$5
	compa_dir=$6
	color_space=$7
	chroma_sub=$8
	bit_depth=$9
	image_size=${10}
	output_dir=${11}
	overlay_pics=${12}
	origname=${13}
  shift 13



	width=${image_size/x*}
	height=${image_size#*x}

  mkdir -p ${output_dir}/${test_name}
	test_dir=${output_dir}/${test_name}
	mkdir -p ${output_dir}/${origname}
	actual_src_dir=${output_dir}/${origname}

	tempin=/tmp/tempin.raw
	tempinoverlay=/tmp/tempinoverlay.raw
	tempout=/tmp/tempout.raw

	if [[ ("${color_space}" == "RGB") && ("${chroma_sub}" == "444") && (("${bit_depth}" == "8") || ("${bit_depth}" == "10") || ("${bit_depth}" == "12")) ]]; then
		extension=ppm
		iodifftest_suffix=""
		if [ ${bit_depth} == "8" ]; then
			insidedifftest_suffix=@${width}x${height}x3:[8-=0]:[8-=1]:[8-=2]
		elif [ ${bit_depth} == "10" ]; then
			insidedifftest_suffix=@${width}x${height}x3:[6-],[10-=0]:[6-],[10-=1]:[6-],[10-=2]
		elif [ ${bit_depth} == "12" ]; then
			insidedifftest_suffix=@${width}x${height}x3:[4-],[12-=0]:[4-],[12-=1]:[4-],[12-=2]
		fi
	elif [[ ("${color_space}" == "YCbCr") && ("${chroma_sub}" == "422") && (("${bit_depth}" == "10") || ("${bit_depth}" == "12")) ]]; then
		extension=yuv
		if [ ${bit_depth} == "10" ]; then
			iodifftest_suffix=@${width}x${height}x3:[6-],[10-=0]:[6-]/2x1,[10-=1]/2x1:[6-]/2x1,[10-=2]/2x1
			insidedifftest_suffix=@${width}x${height}x3:[6-],[10-=0]:[6-]/2x1,[10-=1]/2x1:[6-]/2x1,[10-=2]/2x1
		elif [ ${bit_depth} == "12" ]; then
			iodifftest_suffix=@${width}x${height}x3:[4-],[12-=0]:[4-]/2x1,[12-=1]/2x1:[4-]/2x1,[12-=2]/2x1
			insidedifftest_suffix=@${width}x${height}x3:[4-],[12-=0]:[4-]/2x1,[12-=1]/2x1:[4-]/2x1,[12-=2]/2x1
		fi
	fi

	${DIFFTESTPATH}/difftest_ng	--convert ${tempinoverlay}${insidedifftest_suffix} ${overlay_pics}${iodifftest_suffix} -

	for f in $(find -L ${src_dir} -type f|grep -v ".txt$"|sort); do
		g=${f##*/}
		name=${g/.*}
		extension=${g##*.}
		cp ${f} ${actual_src_dir}/${name}_0.${extension}
		#cp ${f} ${actual_src_dir}/${name}_1.${extension}
		echo 
		${DIFFTESTPATH}/difftest_ng	--convert ${tempin}${insidedifftest_suffix} ${f}${iodifftest_suffix} -
		${OVERLAYERPATH}/overlayer ${tempin} ${tempinoverlay} ${tempout} ${width} ${height} ${bit_depth} ${chroma_sub}
		${DIFFTESTPATH}/difftest_ng	--convert ${actual_src_dir}/${name}_1.${extension}${iodifftest_suffix} ${tempout}${insidedifftest_suffix} -
	done

	compa_dir=${actual_src_dir}
	
  bash benchmark/${codec}/${codec}.sh ${bpp} ${actual_src_dir} ${src_dir_sb_factor} ${color_space} ${chroma_sub} ${bit_depth} ${image_size} ${test_dir}
	i=0
	countSc=0
	echo -n "" >  ${output_dir}/psnr_${test_name}.dat
  for f in $(find -L ${actual_src_dir} -type f|grep -v ".txt$"|sort); do
		if [ ${i} = 0 ]; then
		  g=${f##*/}
		  name=${g/.*}
			name=${name/_${codec}_${bpp/./_}bpp}
			test_file=$(find -L ${test_dir} -type f -name ${name}_${codec}_${bpp/./_}bpp_sc*.${extension})
			test_file_final_name=${test_dir}/${name}_${codec}_${bpp/./_}bpp.${extension}
			compa_file=${compa_dir}/${name}.${extension}	
			#in the case of "Already there" (the info on the sizes is not available anymore)
		  if [ -f ${test_file_final_name} ]; then
				result0=$(${DIFFTESTPATH}/difftest_ng  --only 0 --asprec ${bit_depth} --psnr ${test_file_final_name}${iodifftest_suffix} ${compa_file}${iodifftest_suffix})
				psnr0=${result0##*:}
		    result1=$(${DIFFTESTPATH}/difftest_ng --only 1 --asprec ${bit_depth} --psnr ${test_file_final_name}${iodifftest_suffix} ${compa_file}${iodifftest_suffix}) 
		    psnr1=${result1##*:}
		    result2=$(${DIFFTESTPATH}/difftest_ng --only 2 --asprec ${bit_depth} --psnr ${test_file_final_name}${iodifftest_suffix} ${compa_file}${iodifftest_suffix}) 
		    psnr2=${result2##*:}
		  	result=$(${DIFFTESTPATH}/difftest_ng --asprec ${bit_depth} --swpsnr ${test_file_final_name}${iodifftest_suffix} ${compa_file}${iodifftest_suffix})
		    psnr=${result##*:}
		    echo ${name}.${extension} ${psnr} ${psnr0} ${psnr1} ${psnr2} >> ${output_dir}/psnr_${test_name}.dat
			elif [ ${test_file} != "" ]; then
				temp=${test_file/.*}
				temp2=${temp##*_sc}
				realSize=${temp2/x*}
				targetSize=${temp2#*x}
				sizeExceeded=$(bc <<< "${realSize} > ${targetSize}")
				result0=$(${DIFFTESTPATH}/difftest_ng  --only 0 --asprec ${bit_depth} --psnr ${test_file}${iodifftest_suffix} ${compa_file}${iodifftest_suffix})
				psnr0=${result0##*:}
		    result1=$(${DIFFTESTPATH}/difftest_ng --only 1 --asprec ${bit_depth} --psnr ${test_file}${iodifftest_suffix} ${compa_file}${iodifftest_suffix}) 
		    psnr1=${result1##*:}
		    result2=$(${DIFFTESTPATH}/difftest_ng --only 2 --asprec ${bit_depth} --psnr ${test_file}${iodifftest_suffix} ${compa_file}${iodifftest_suffix}) 
		    psnr2=${result2##*:}
		    result=$(${DIFFTESTPATH}/difftest_ng --asprec ${bit_depth} --swpsnr ${test_file}${iodifftest_suffix} ${compa_file}${iodifftest_suffix})
		    psnr=${result##*:}
				if [ ${sizeExceeded} = 1 ]; then
		    	echo ${name}.${extension} ${psnr} ${psnr0} ${psnr1} ${psnr2} ${realSize} ${targetSize} !!! >> ${output_dir}/psnr_${test_name}.dat
					countSc=$(bc <<< "${countSc}+1")
				else
					echo ${name}.${extension} ${psnr} ${psnr0} ${psnr1} ${psnr2} ${realSize} ${targetSize} >> ${output_dir}/psnr_${test_name}.dat
				fi
				mv ${test_file} ${test_file_final_name}
			else #if the file is not there
				echo ${name}.${extension} NaN NaN NaN NaN >> ${output_dir}/psnr_${test_name}.dat
		  fi
	#    to remove the picture in the output folder
	#    rm ${test_file_final_name}
		fi
		i=$(bc <<< "(${i}+1)%${src_dir_sb_factor}")
  done
	echo NumberSizeExceeded ${countSc} >> ${output_dir}/psnr_${test_name}.dat
	rm ${tempin}
	rm ${tempinoverlay}
	rm ${tempout}
}






# usage:
#   gen_overlay.sh test_name codec bpp src_dir src_dir_sb_factor compa_dir color_space chroma_sub bit_depth image_size output_dir overlay_pics origname

test_name=$1
codec=$2
bpp=$3
src_dir=$4
src_dir_sb_factor=$5
compa_dir=$6
color_space=$7
chroma_sub=$8
bit_depth=$9
image_size=${10}
output_dir=${11}
overlay_pics=${12}
origname=${13}
shift 13

  
if [ -z ${test_name} ] || [ -z ${codec} ] || [ -z ${bpp} ] || [ -z ${src_dir} ] || [ -z ${src_dir_sb_factor} ] || [ -z ${compa_dir} ] || [ -z ${color_space} ] || [ -z ${chroma_sub} ] || [ -z ${bit_depth} ] || [ -z ${image_size} ] || [ -z ${output_dir} ] || [ -z ${overlay_pics} ] || [ -z ${origname} ]; then
  echo "Usage: gen_overlay.sh test_name codec bpp src_dir src_dir_sb_factor compa_dir color_space chroma_sub bit_depth image_size output_dir overlay_pics origname"
  exit 1
fi

gen_overlay ${test_name} ${codec} ${bpp} ${src_dir} ${src_dir_sb_factor} ${compa_dir} ${color_space} ${chroma_sub} ${bit_depth} ${image_size} ${output_dir} ${overlay_pics} ${origname}
