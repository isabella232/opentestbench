
#    Opentestbench : an open-source framework to assess the performances of image compression schemes
#    Copyright (C) 2015  intoPIX s.a. , Sébastien Lugan 
#    Copyright (C) 2015  Universite Catholique de Louvain, Alexandre Willème
#
#    Opentestbench is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#    
#   For any question please contact : 
#   Alexandre Willème (alexandre.willeme@uclouvain.be)

#!/bin/bash
export LANG=C

initialLoca=${PWD}

echo Installing difftest_ng
mkdir -p build/utils
cd build/utils
git clone https://github.com/thorfdbg/difftest_ng && rm -rf difftest_ng/.git
cd difftest_ng
autoreconf -f -i
./configure
make
echo Installation of difftest_ng done
cd ${initialLoca}


echo Installing error_insertion1b
mkdir -p build/utils/error_insertion1b
cp utils/error_insertion1b/* build/utils/error_insertion1b
cd build/utils/error_insertion1b
cmake .
make
cd ../../..
echo Installation of error_insertion1b done
cd ${initialLoca}

echo Installing offset_binary
mkdir -p build/utils/offset_binary
cp utils/offset_binary/* build/utils/offset_binary
cd build/utils/offset_binary
cmake .
make
cd ../../..
cd ${initialLoca}
echo Installation of offset_binary done

echo Installing merger
mkdir -p build/utils/merger
cp utils/merger/* build/utils/merger
cd build/utils/merger
cmake .
make
cd ../../..
cd ${initialLoca}
echo Installation of merger done

echo Installing pixel_shift
mkdir -p build/utils/pixel_shift
cp utils/pixel_shift/* build/utils/pixel_shift
cd build/utils/pixel_shift
cmake .
make
cd ../../..
cd ${initialLoca}
echo Installation of pixel_shift done

echo Installing overlayer
mkdir -p build/utils/overlayer
cp utils/overlayer/* build/utils/overlayer
cd build/utils/overlayer
cmake .
make
cd ../../..
cd ${initialLoca}
echo Installation of overlayer done

echo Installing vc2-reference
mkdir -p build/codecs
cd build/codecs
git clone https://github.com/bbc/vc2-reference.git && rm -rf vc2-reference/.git
cd vc2-reference
autoreconf -f -i
./configure --enable-other-decoders
make
cd ${initialLoca}
echo Installation of vc2-reference done

echo Installing Kakadu
mkdir -p build/codecs/JPEG2000
cd build/codecs/JPEG2000
#wget -c 'http://kakadusoftware.com/wp-content/uploads/2014/06/KDU77_Demo_Apps_for_Linux-x86-32_150710.zip'
wget -c 'http://kakadusoftware.com/wp-content/uploads/2014/06/KDU77_Demo_Apps_for_Linux-x86-32_150710.zip'
unzip KDU77_Demo_Apps_for_Linux-x86-32_150710.zip
rm KDU77_Demo_Apps_for_Linux-x86-32_150710.zip
mv KDU77_Demo_Apps_for_Linux-x86-32_150710/* .
rmdir KDU77_Demo_Apps_for_Linux-x86-32_150710
cd ${initialLoca}
echo Installation of Kakadu done

echo Installing JPEG XT
mkdir -p build/codecs/JPEGXT
cd build/codecs/JPEGXT
wget -c 'https://jpeg.org/downloads/jpegxt/jpeg_xt_libjpeg_1367abcd89.zip'
unzip jpeg_xt*
rm jpeg_xt*
autoreconf -f -i
./configure
make
cd ${initialLoca}
echo Installation of JPEGXT done

echo Installing DSC
cp codecs/DSC/DSC_model* build/codecs/DSC.zip
cd build/codecs
unzip DSC.zip
mkdir -p DSC_model
mkdir -p DSC_model/source
rm DSC.zip
mv DSC_model_*/* DSC_model/
rmdir DSC_model_*
cp ../../codecs/DSC/configRGB.cfg DSC_model/configRGB.cfg
cp ../../codecs/DSC/configRGBenc.cfg DSC_model/configRGBenc.cfg
cp ../../codecs/DSC/configRGBdec.cfg DSC_model/configRGBdec.cfg
cp ../../codecs/DSC/configYCbCr422.cfg DSC_model/configYCbCr422.cfg
cp ../../codecs/DSC/configYCbCr422enc.cfg DSC_model/configYCbCr422enc.cfg
cp ../../codecs/DSC/configYCbCr422dec.cfg DSC_model/configYCbCr422dec.cfg
cd DSC_model/source
make
mv dsc ../dsc
cd ${initialLoca}
echo Installation of DSC done

echo Installing HEVC HM
mkdir -p build/codecs/HEVC
cd build/codecs/HEVC
wget -c 'https://hevc.hhi.fraunhofer.de/trac/hevc/browser/tags/HM-16.8?rev=4740&format=zip'
mv HM* HM.zip
unzip HM.zip
rm HM.zip
mv HM* HM
cd HM/build/linux
make all
make all_highbitdepth
cd ${initialLoca}
cp codecs/HEVC/*.cfg build/codecs/HEVC/HM/bin
echo Installation of HEVC HM done


echo Installing HEVC HM SCC
mkdir -p build/codecs/HEVCSCC
cd build/codecs/HEVCSCC
wget -c 'https://hevc.hhi.fraunhofer.de/trac/hevc/browser/branches/HM-SCC-extensions?rev=4749&format=zip'
mv HM* HM.zip
unzip HM.zip
rm HM.zip
mv HM* HM
cd HM/build/linux
make
cp ../../cfg/*.cfg ../../bin
cd ${initialLoca}
cp codecs/HEVCSCC/*.cfg build/codecs/HEVCSCC/HM/bin
echo Installation of HEVC HM SCC done





